{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/igor/React_Hillel/02_blog/src/class-works/cw2/life-cycle-example/components/AuthorInfo.js\";\nimport React, { Component } from 'react';\nimport { Card, Icon, Image } from \"semantic-ui-react\";\nimport LoadingOverlay from \"./LoadingOverlay\";\n\nclass AuthorInfo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      author: null,\n      loading: false,\n      error: ''\n    };\n  }\n\n  componentDidMount() {\n    const {\n      authorId\n    } = this.props;\n\n    if (authorId) {\n      this.fetchAuthor(authorId);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.authorId !== this.props.authorId && this.props.authorId) {\n      this.fetchAuthor(this.props.authorId);\n    }\n  }\n\n  fetchAuthor(authorId) {\n    this.setState({\n      loading: true\n    });\n    fetch(`https://jsonplaceholder.typicode.com/users/${authorId}`).then(response => response.json()).then(data => this.setState({\n      author: data,\n      loading: false\n    })).then(data => console.log(data)).catch(e => this.setState({\n      error: e.message,\n      loading: false,\n      author: null\n    }));\n  }\n\n  render() {\n    const {\n      error,\n      author,\n      loading,\n      authorId\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"author-fixed\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LoadingOverlay, {\n        active: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), author && /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(Image, {\n          src: \"https://react.semantic-ui.com/images/avatar/large/matthew.png\",\n          wrapped: true,\n          ui: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Content, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: author.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card.Meta, {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"date\",\n              children: author.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card.Description, {\n            children: [author.address.city, \", \", author.address.street, \" \", author.address.zipcode]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Content, {\n          extra: true,\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            children: [/*#__PURE__*/_jsxDEV(Icon, {\n              name: \"camera\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this), fetch(`https://jsonplaceholder.typicode.com/users/${authorId}`).then(response => response.json()).then(data => this.setState({\n              author: data,\n              loading: false\n            })).then(data => console.log(data)).catch(e => this.setState({\n              error: e.message,\n              loading: false,\n              author: null\n            }))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default AuthorInfo;","map":{"version":3,"sources":["/home/igor/React_Hillel/02_blog/src/class-works/cw2/life-cycle-example/components/AuthorInfo.js"],"names":["React","Component","Card","Icon","Image","LoadingOverlay","AuthorInfo","constructor","props","state","author","loading","error","componentDidMount","authorId","fetchAuthor","componentDidUpdate","prevProps","setState","fetch","then","response","json","data","console","log","catch","e","message","render","name","email","address","city","street","zipcode"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,KAArB,QAAkC,mBAAlC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AAEA,MAAMC,UAAN,SAAyBL,SAAzB,CAAmC;AACjCM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,IADG;AAEXC,MAAAA,OAAO,EAAE,KAFE;AAGXC,MAAAA,KAAK,EAAE;AAHI,KAAb;AAKD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEC,MAAAA;AAAF,QAAe,KAAKN,KAA1B;;AACA,QAAIM,QAAJ,EAAc;AACZ,WAAKC,WAAL,CAAiBD,QAAjB;AACD;AACF;;AAEDE,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC5B,QAAIA,SAAS,CAACH,QAAV,KAAuB,KAAKN,KAAL,CAAWM,QAAlC,IAA8C,KAAKN,KAAL,CAAWM,QAA7D,EAAuE;AACrE,WAAKC,WAAL,CAAiB,KAAKP,KAAL,CAAWM,QAA5B;AACD;AACF;;AAEDC,EAAAA,WAAW,CAACD,QAAD,EAAW;AACpB,SAAKI,QAAL,CAAc;AAAEP,MAAAA,OAAO,EAAE;AAAX,KAAd;AACAQ,IAAAA,KAAK,CAAE,8CAA6CL,QAAS,EAAxD,CAAL,CACGM,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQG,IAAI,IAAI,KAAKL,QAAL,CAAc;AAAER,MAAAA,MAAM,EAAEa,IAAV;AAAgBZ,MAAAA,OAAO,EAAE;AAAzB,KAAd,CAFhB,EAGGS,IAHH,CAGQG,IAAI,IAAIC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAHhB,EAIGG,KAJH,CAISC,CAAC,IAAI,KAAKT,QAAL,CAAc;AAAEN,MAAAA,KAAK,EAAEe,CAAC,CAACC,OAAX;AAAoBjB,MAAAA,OAAO,EAAE,KAA7B;AAAoCD,MAAAA,MAAM,EAAE;AAA5C,KAAd,CAJd;AAKD;;AAEDmB,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEjB,MAAAA,KAAF;AAASF,MAAAA,MAAT;AAAiBC,MAAAA,OAAjB;AAA0BG,MAAAA;AAA1B,QAAuC,KAAKL,KAAlD;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,kBAAwBG;AAAxB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,cAAD;AAAgB,QAAA,MAAM,EAAED;AAAxB;AAAA;AAAA;AAAA;AAAA,cAFF,EAGGD,MAAM,iBACP,QAAC,IAAD;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,GAAG,EAAC,+DAAX;AAA2E,UAAA,OAAO,MAAlF;AAAmF,UAAA,EAAE,EAAE;AAAvF;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AAAA,kCACE,QAAC,IAAD,CAAM,MAAN;AAAA,sBAAcA,MAAM,CAACoB;AAArB;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,IAAD,CAAM,IAAN;AAAA,mCACE;AAAM,cAAA,SAAS,EAAC,MAAhB;AAAA,wBAAwBpB,MAAM,CAACqB;AAA/B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAFF,eAKE,QAAC,IAAD,CAAM,WAAN;AAAA,uBACGrB,MAAM,CAACsB,OAAP,CAAeC,IADlB,QAC0BvB,MAAM,CAACsB,OAAP,CAAeE,MADzC,OACkDxB,MAAM,CAACsB,OAAP,CAAeG,OADjE;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAWE,QAAC,IAAD,CAAM,OAAN;AAAc,UAAA,KAAK,MAAnB;AAAA,iCACE;AAAA,oCACE,QAAC,IAAD;AAAM,cAAA,IAAI,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA,oBADF,EAEIhB,KAAK,CAAE,8CAA6CL,QAAS,EAAxD,CAAL,CACCM,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,IAAI,IAAI,KAAKL,QAAL,CAAc;AAAER,cAAAA,MAAM,EAAEa,IAAV;AAAgBZ,cAAAA,OAAO,EAAE;AAAzB,aAAd,CAFd,EAGCS,IAHD,CAGMG,IAAI,IAAIC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAHd,EAICG,KAJD,CAIOC,CAAC,IAAI,KAAKT,QAAL,CAAc;AAAEN,cAAAA,KAAK,EAAEe,CAAC,CAACC,OAAX;AAAoBjB,cAAAA,OAAO,EAAE,KAA7B;AAAoCD,cAAAA,MAAM,EAAE;AAA5C,aAAd,CAJZ,CAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAXF;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA8BD;;AAhEgC;;AAmEnC,eAAeJ,UAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Card, Icon, Image } from \"semantic-ui-react\";\nimport LoadingOverlay from \"./LoadingOverlay\";\n\nclass AuthorInfo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      author: null,\n      loading: false,\n      error: ''\n    }\n  }\n\n  componentDidMount() {\n    const { authorId } = this.props;\n    if (authorId) {\n      this.fetchAuthor(authorId)\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.authorId !== this.props.authorId && this.props.authorId) {\n      this.fetchAuthor(this.props.authorId)\n    }\n  }\n\n  fetchAuthor(authorId) {\n    this.setState({ loading: true });\n    fetch(`https://jsonplaceholder.typicode.com/users/${authorId}`)\n      .then(response => response.json())\n      .then(data => this.setState({ author: data, loading: false }))\n      .then(data => console.log(data))\n      .catch(e => this.setState({ error: e.message, loading: false, author: null }))\n  }\n\n  render() {\n    const { error, author, loading, authorId } = this.state;\n    return (\n      <div className='author-fixed'>\n        <div className='error'>{error}</div>\n        <LoadingOverlay active={loading} />\n        {author &&\n        <Card>\n          <Image src='https://react.semantic-ui.com/images/avatar/large/matthew.png' wrapped ui={false}/>\n          <Card.Content>\n            <Card.Header>{author.name}</Card.Header>\n            <Card.Meta>\n              <span className='date'>{author.email}</span>\n            </Card.Meta>\n            <Card.Description>\n              {author.address.city}, {author.address.street} {author.address.zipcode}\n            </Card.Description>\n          </Card.Content>\n          <Card.Content extra>\n            <a>\n              <Icon name='camera'/>\n               {fetch(`https://jsonplaceholder.typicode.com/users/${authorId}`)\n                .then(response => response.json())\n                .then(data => this.setState({ author: data, loading: false }))\n                .then(data => console.log(data))\n                .catch(e => this.setState({ error: e.message, loading: false, author: null }))}\n            </a>\n          </Card.Content>\n        </Card>\n        }\n      </div>\n    );\n  }\n}\n\nexport default AuthorInfo;\n"]},"metadata":{},"sourceType":"module"}