{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/igor/React_Hillel/02_blog/src/class-works/cw2/life-cycle-example/components/AuthorInfo.js\";\nimport React, { Component } from 'react';\nimport { Card, Icon, Image } from \"semantic-ui-react\";\nimport LoadingOverlay from \"./LoadingOverlay\";\n\nclass AuthorInfo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      author: null,\n      albums: null,\n      loading: false,\n      error: ''\n    };\n  }\n\n  componentDidMount() {\n    const {\n      authorId\n    } = this.props;\n\n    if (authorId) {\n      this.fetchAuthor(authorId);\n      this.fetchAlbums(authorId);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.authorId !== this.props.authorId && this.props.authorId) {\n      this.fetchAuthor(this.props.authorId);\n      this.fetchAlbums(this.props.authorId);\n    }\n  }\n\n  fetchAuthor(authorId) {\n    this.setState({\n      loading: true\n    });\n    fetch(`https://jsonplaceholder.typicode.com/users/${authorId}`).then(response => response.json()).then(data => this.setState({\n      author: data,\n      loading: false\n    })).catch(e => this.setState({\n      error: e.message,\n      loading: false,\n      author: null\n    }));\n  }\n\n  fetchAlbums(authorId) {\n    this.setState({\n      loading: true\n    });\n    fetch(`https://jsonplaceholder.typicode.com/users/${authorId}/albums`).then(response => response.json()).then(data => this.setState({\n      albums: data,\n      loading: false\n    })).catch(e => this.setState({\n      error: e.message,\n      loading: false,\n      author: null\n    }));\n  }\n\n  render() {\n    const {\n      error,\n      author,\n      loading,\n      albums\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"author-fixed\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LoadingOverlay, {\n        active: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), author && /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(Image, {\n          src: \"https://react.semantic-ui.com/images/avatar/large/matthew.png\",\n          wrapped: true,\n          ui: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Content, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: author.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card.Meta, {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"date\",\n              children: author.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card.Description, {\n            children: [author.address.city, \", \", author.address.street, \" \", author.address.zipcode]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Content, {\n          extra: true,\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            children: [/*#__PURE__*/_jsxDEV(Icon, {\n              name: \"camera\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this), albums && albums.map(album => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: album.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 48\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default AuthorInfo;","map":{"version":3,"sources":["/home/igor/React_Hillel/02_blog/src/class-works/cw2/life-cycle-example/components/AuthorInfo.js"],"names":["React","Component","Card","Icon","Image","LoadingOverlay","AuthorInfo","constructor","props","state","author","albums","loading","error","componentDidMount","authorId","fetchAuthor","fetchAlbums","componentDidUpdate","prevProps","setState","fetch","then","response","json","data","catch","e","message","render","name","email","address","city","street","zipcode","map","album"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Card, Icon, Image } from \"semantic-ui-react\";\nimport LoadingOverlay from \"./LoadingOverlay\";\n\nclass AuthorInfo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      author: null,\n      albums: null,\n      loading: false,\n      error: ''\n    }\n  }\n\n  componentDidMount() {\n    const { authorId } = this.props;\n    if (authorId) {\n      this.fetchAuthor(authorId)\n      this.fetchAlbums(authorId)\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.authorId !== this.props.authorId && this.props.authorId) {\n      this.fetchAuthor(this.props.authorId)\n      this.fetchAlbums(this.props.authorId)\n    }\n  }\n\n  fetchAuthor(authorId) {\n    this.setState({ loading: true });\n    fetch(`https://jsonplaceholder.typicode.com/users/${authorId}`)\n      .then(response => response.json())\n      .then(data => this.setState({ author: data, loading: false }))\n      .catch(e => this.setState({ error: e.message, loading: false, author: null }))\n  }\n\n  fetchAlbums(authorId) {\n    this.setState({ loading: true });\n    fetch(`https://jsonplaceholder.typicode.com/users/${authorId}/albums`)\n      .then(response => response.json())\n      .then(data => this.setState({ albums: data, loading: false }))\n      .catch(e => this.setState({ error: e.message, loading: false, author: null }))\n  }\n\n  render() {\n    const { error, author, loading, albums } = this.state;\n    return (\n      <div className='author-fixed'>\n        <div className='error'>{error}</div>\n        <LoadingOverlay active={loading} />\n        {author &&\n        <Card>\n          <Image src='https://react.semantic-ui.com/images/avatar/large/matthew.png' wrapped ui={false}/>\n          <Card.Content>\n            <Card.Header>{author.name}</Card.Header>\n            <Card.Meta>\n              <span className='date'>{author.email}</span>\n            </Card.Meta>\n            <Card.Description>\n              {author.address.city}, {author.address.street} {author.address.zipcode}\n            </Card.Description>\n          </Card.Content>\n          <Card.Content extra>\n            <a>\n              <Icon name='camera'/>\n                {albums && albums.map(album => <div>{album.name}</div>)} \n            </a>\n          </Card.Content>\n        </Card>\n        }\n      </div>\n    );\n  }\n}\n\nexport default AuthorInfo;\n"]},"metadata":{},"sourceType":"module"}