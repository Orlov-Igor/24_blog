{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/igor/React_Hillel/02_blog/src/components/PostList.js\";\nimport React, { Component } from 'react';\nimport PostItem from './PostItem';\nimport LoadingOverlay from './LoadingOverlay';\n\nclass PostList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n      posts: []\n    };\n  }\n\n  componentDidMount() {\n    this.fetchUsers();\n  }\n\n  fetchUsers() {\n    this.setState({\n      loading: true\n    });\n    fetch('https://jsonplaceholder.typicode.com/posts').then(response => response.json()).then(posts => {\n      this.setState({\n        loading: false,\n        posts\n      });\n    }).catch(e => {\n      this.setState({\n        loading: false\n      });\n      alert(e.message);\n    });\n  }\n\n  render() {\n    const {\n      loading,\n      posts\n    } = this.state;\n    const {\n      onPostClick,\n      postId\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-list-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(LoadingOverlay, {\n        active: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }, this), posts.map(post => /*#__PURE__*/_jsxDEV(PostItem, {\n        onClick: () => onPostClick(post),\n        post: post,\n        postId: postId\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 29\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default PostList;","map":{"version":3,"sources":["/home/igor/React_Hillel/02_blog/src/components/PostList.js"],"names":["React","Component","PostItem","LoadingOverlay","PostList","constructor","props","state","loading","posts","componentDidMount","fetchUsers","setState","fetch","then","response","json","catch","e","alert","message","render","onPostClick","postId","map","post","id"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AAEA,MAAMC,QAAN,SAAuBH,SAAvB,CAAiC;AAC/BI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,KADE;AAEXC,MAAAA,KAAK,EAAE;AAFI,KAAb;AAID;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,UAAL;AACD;;AAEDA,EAAAA,UAAU,GAAG;AACX,SAAKC,QAAL,CAAc;AAAEJ,MAAAA,OAAO,EAAE;AAAX,KAAd;AACAK,IAAAA,KAAK,CAAC,4CAAD,CAAL,CACGC,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQL,KAAK,IAAI;AACb,WAAKG,QAAL,CAAc;AACZJ,QAAAA,OAAO,EAAE,KADG;AAEZC,QAAAA;AAFY,OAAd;AAID,KAPH,EAQGQ,KARH,CAQSC,CAAC,IAAI;AACV,WAAKN,QAAL,CAAc;AACZJ,QAAAA,OAAO,EAAE;AADG,OAAd;AAGAW,MAAAA,KAAK,CAACD,CAAC,CAACE,OAAH,CAAL;AACD,KAbH;AAcD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEb,MAAAA,OAAF;AAAWC,MAAAA;AAAX,QAAoB,KAAKF,KAA/B;AACA,UAAM;AAAEe,MAAAA,WAAF;AAAeC,MAAAA;AAAf,QAA0B,KAAKjB,KAArC;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,8BACA,QAAC,cAAD;AAAgB,QAAA,MAAM,EAAEE;AAAxB;AAAA;AAAA;AAAA;AAAA,cADA,EAEIC,KAAK,CAACe,GAAN,CAAUC,IAAI,iBAAI,QAAC,QAAD;AAAU,QAAA,OAAO,EAAE,MAAMH,WAAW,CAACG,IAAD,CAApC;AAA4C,QAAA,IAAI,EAAEA,IAAlD;AAAsE,QAAA,MAAM,EAAEF;AAA9E,SAA6DE,IAAI,CAACC,EAAlE;AAAA;AAAA;AAAA;AAAA,cAAlB,CAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AAxC8B;;AA2CjC,eAAetB,QAAf","sourcesContent":["import React, { Component } from 'react';\nimport PostItem from './PostItem';\nimport LoadingOverlay from './LoadingOverlay'\n\nclass PostList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n      posts: [],\n    };\n  }\n\n  componentDidMount() {\n    this.fetchUsers();\n  }\n\n  fetchUsers() {\n    this.setState({ loading: true });\n    fetch('https://jsonplaceholder.typicode.com/posts')\n      .then(response => response.json())\n      .then(posts => {\n        this.setState({\n          loading: false,\n          posts\n        })\n      })\n      .catch(e => {\n        this.setState({\n          loading: false\n        });\n        alert(e.message)\n      })\n  }\n\n  render() {\n    const { loading, posts} = this.state;\n    const { onPostClick, postId } = this.props;\n    return (\n      <div className='post-list-wrapper'>\n      <LoadingOverlay active={loading} />\n        { posts.map(post => <PostItem onClick={() => onPostClick(post)} post={post} key={post.id} postId={postId} /> )} \n      </div>\n    );\n  }\n}\n\nexport default PostList;\n"]},"metadata":{},"sourceType":"module"}